name: Deploy EC2 Instance

on: 
  push:
    branches:
      - master
  
permissions:
  id-token: write
  contents: read

jobs:

  aws-import-secrets:
    runs-on: self-hosted
    outputs:
      AWS_KEY: ${{ steps.aws.outputs.AWS_KEY }}
      AWS_SECRET: ${{ steps.aws.outputs.AWS_SECRET }}
    steps:
    - name: AWS inline credentials
      id: aws
      run: |
        export VAULT_ADDR="https://127.0.0.1:8200"
        export VAULT_CACERT="/tmp/vault-tls2535058764/vault-ca.pem"
        export AWS_INFO=$(VAULT_TOKEN=${{ secrets.AWS_TOKEN }} vault read aws/creds/aws_short_lived -format=json)
        aws_key=$(echo $AWS_INFO | jq -r ".data.access_key")
        aws_secret=$(echo $AWS_INFO | jq -r ".data.secret_key")
        echo "AWS_KEY=$aws_key" >> "$GITHUB_OUTPUT"
        echo "AWS_SECRET=$aws_secret" >> "$GITHUB_OUTPUT"
      shell: bash

  azure-import-secrets:
    runs-on: self-hosted
    outputs:
      CLIENT_ID: ${{ steps.aws.outputs.AWS_KEY }}
      CLIENT_SECRET: ${{ steps.aws.outputs.AWS_SECRET }}
    steps:
    - name: AZURE inline credentials
      id: azure
      run: | 
        export VAULT_ADDR="https://127.0.0.1:8200"
        export VAULT_CACERT="/tmp/vault-tls2535058764/vault-ca.pem"
        export AZURE_INFO=$(VAULT_TOKEN=${{ secrets.AZURE_TOKEN }} vault read azure/creds/azure_short_lived -format=json)
        export az_client_id=$(echo $AZURE_INFO | jq -r ".data.client_id")
        export az_clien_secret=$(echo $AZURE_INFO | jq -r ".data.client_secret") 
      shell: bash

  deploy-aws:
    needs: aws-import-secrets
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ needs.aws-import-secrets.outputs.AWS_KEY }}
        aws-secret-access-key: ${{ needs.aws-import-secrets.outputs.AWS_SECRET }}
        aws-region: us-east-1 




 #   - name: Deploy CloudFormation stack
 #     run: |
 #       aws cloudformation deploy \
 #         --template-file cloudformation-template.yml \
 #         --stack-name ec2-almalinux-stack \
 #         --capabilities CAPABILITY_NAMED_IAM
