name: Deploy EC2 Instance

on: 
  push:
    branches:
      - main
  
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: self-hosted
    steps:
    - name: Import Secrets
      id: import-secrets
      uses: hashicorp/vault-action@v3.1.0
      with:
        url: https://127.0.0.1:8200
        tlsSkipVerify: true
#        token: ${{ secrets.VAULT_TOKEN }}
        token: ${{ secrets.MYGITHUB_TOKEN }}
        exportEnv: true
        secrets: |
          /aws/creds/my-role access_key | AWS_ACCESS_KEY ;
          /aws/creds/my-role secret_key | AWS_SECRET_ACCESS_KEY
  

#   deploy:
#    needs: build
#    runs-on: ubuntu-latest

#    steps:
#    - name: Debug vault
#      run: |
#       sleep 10
#       set -x
#       echo '${{ steps.import-secrets.outputs.AWS_ACCESS_KEY }}' \| base64 -w0; echo

#       if [ -n ${{ steps.import-secrets.outputs.AWS_SECRET_ACCESS_KEY }} ]; then echo not empty; else  echo empty; fi

#        echo "${{ toJson(steps.import-secrets.outputs) }}" >> secrets.json
#        cat secrets.json
#        ACCESS_KEY_ID="${{ env.AWS_ACCESS_KEY }}"
#        SECRET_ACCESS_KEY="{{ env.AWS_SECRET_ACCESS_KEY }}"
      
#    - name: Checkout repository
#      uses: actions/checkout@v2
#

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 
        
#        aws-access-key-id: ${{ steps.import-secrets.outputs.AWS_ACCESS_KEY }}
#        aws-secret-access-key: ${{ steps.import-secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: us-east-1 # Replace with your desired AWS region



 #   - name: Deploy CloudFormation stack
 #     run: |
 #       aws cloudformation deploy \
 #         --template-file cloudformation-template.yml \
 #         --stack-name ec2-almalinux-stack \
 #         --capabilities CAPABILITY_NAMED_IAM
