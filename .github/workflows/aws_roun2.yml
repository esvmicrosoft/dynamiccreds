name: Deploy EC2 Instance

on: 
  push:
    branches:
      - main
  
permissions:
  id-token: write
  contents: read

jobs:

  build:
    runs-on: self-hosted
    steps:
    - name: AWS inline credentials
      id: aws-import-secrets
      run: |
        export VAULT_ADDR="https://127.0.0.1:8200"
        export VAULT_CACERT="/tmp/vault-tls2535058764/vault-ca.pem"
        export AWS_INFO=$(VAULT_TOKEN=${{ secrets.AWS_TOKEN }} vault read aws/creds/aws_short_lived -format=json)
        export aws_key=$(echo $AWS_INFO | jq -r ".data.access_key")
        export aws_secret=$(echo $AWS_INFO | jq -r ".data.secret_key") 
      shell: bash


#    - name: AZURE inline credentials
#      id: azure-import-secrets
#      run: | 
#        export VAULT_ADDR="https://127.0.0.1:8200"
#        export VAULT_CACERT="/tmp/vault-tls2535058764/vault-ca.pem"
#        export AZURE_INFO=$(VAULT_TOKEN=${{ secrets.AZURE_TOKEN }} vault read azure/creds/azure_short_lived -format=json)
#        export az_client_id=$(echo $AZURE_INFO | jq -r ".data.client_id")
#        export az_clien_secret=$(echo $AZURE_INFO | jq -r ".data.client_secret") 
#      shell: bash


  
#   deploy:
#    needs: build
#    runs-on: ubuntu-latest

#    steps:
#    - name: Debug vault
#      run: |
#       sleep 10
#       set -x
#       echo '${{ steps.import-secrets.outputs.AWS_ACCESS_KEY }}' \| base64 -w0; echo

#       if [ -n ${{ steps.import-secrets.outputs.AWS_SECRET_ACCESS_KEY }} ]; then echo not empty; else  echo empty; fi

#        echo "${{ toJson(steps.import-secrets.outputs) }}" >> secrets.json
#        cat secrets.json
#        ACCESS_KEY_ID="${{ env.AWS_ACCESS_KEY }}"
#        SECRET_ACCESS_KEY="{{ env.AWS_SECRET_ACCESS_KEY }}"
      
#    - name: Checkout repository
#      uses: actions/checkout@v2
#

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ steps.aws-import-secrets.outputs.aws_key }}
        aws-secret-access-key: ${{ steps.aws-import-secrets.outputs.aws_secret }}
        aws-region: us-east-1 




 #   - name: Deploy CloudFormation stack
 #     run: |
 #       aws cloudformation deploy \
 #         --template-file cloudformation-template.yml \
 #         --stack-name ec2-almalinux-stack \
 #         --capabilities CAPABILITY_NAMED_IAM
